# This is a basic workflow to help you get started with Actions

name: My-GitHubActions-Basic

env :
  APPLICATION_NAME: "MyGlobalVar1"
  PACKAGE_NAME    : "my_deploy_ver-${{ github.sha }}"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    runs-on: ubuntu-latest

    steps:    
    - name: Run a one-line script in Testing
      run : echo Hello, world in TEST job!
      
    - name: Run multi-line script in Testing
      run : |
        echo Add other actions to test,
        echo test, and deploy your project.
        
    - name: Execure few commands
      run : |
        echo "Hello Message1"
        echo "Hello Message2"
        echo "Application name: ${{ env.APPLICATION_NAME }}"
        
    - name: List current folder
      run : ls -la

    - name: Git clone my repo
      uses: actions/checkout@v1

    - name: List current folder2
      run : ls -la
      
          

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs  : test
    env    :
      VAR1 : "This is Job level Varuable1"
      VAR2 : "This is Job level Varuable2"


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script in build
        run: echo Hello, world from Build!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run : |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Printing Deployment package
        run : echo "Deploy package name is ${{ env.PACKAGE_NAME }}"

      - name: Print env vars
        run : |
          echo "Var1 = ${{ env.VAR1 }}"
          echo "Var2 = ${{ env.VAR2 }}"
          echo "Var3 = $LOCAL_VAR"
        env :
          LOCAL_VAR: "This is LOCAL var!"

      - name: Lets test some packages if the are here 1
        run : aws --version
        
      - name: Lets test some packages if the are here 2
        run : zip --version
